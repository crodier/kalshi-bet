spring:
  application:
    name: exchange-order-api-test
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: 
    driver-class-name: org.h2.Driver
  r2dbc:
    url: r2dbc:h2:mem:///testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ""
  flyway:
    enabled: true
    locations: classpath:db/migration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      group-id: test-group
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8080/.well-known/jwks.json # Dummy for testing

server:
  port: 0 # Random port for testing

management:
  endpoints:
    web:
      exposure:
        include: health,info

exchange:
  order:
    risk-limits:
      max-bet-amount: 100000.00
      max-user-total-risk: 1000000.00
    kafka-config:
      topics:
        fix-order-topic:
          name: FIX-ORDER-TEST
        fix-execution-topic:
          name: FIX-EXECUTION-TEST

pekko:
  config: classpath:application-test.conf

quickfixj:
  client:
    enabled: false

logging:
  level:
    com.betfanatics: DEBUG
    org.apache.pekko: INFO
    org.springframework.kafka: WARN