logging:
  level:
    root: INFO
    com.betfanatics: DEBUG
#    io.r2dbc.postgresql.QUERY: DEBUG
#    io.r2dbc.postgresql.PARAM: DEBUG
management:
  statsd:
    metrics:
      export:
        host: localhost
        port: 8125
        enabled: false
  endpoint:
    health:
      validate-group-membership: false
server:
  servlet:
    context-path: /

springdoc:
  # This property is not needed if auth is not required for the apis
  oAuthFlow:
    tokenUrl: https://fbg-user-pool-fbg-dev-1.auth.us-west-2.amazoncognito.com/oauth2/token
api:
  hub:
    url: https://apihub.int.fanatics.bet
# In non-local environments, this should be set in the helmrelease file
aws:
  cognito:
    userpool.id: us-west-2_iC324Ghfr

spring:
  # only for pekko projections
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/trading
    username: postgres
    password: postgres
  # only for flyway and quickfix  
  datasource:
    url: jdbc:postgresql://localhost:5432/trading
    username: postgres
    password: postgres
  kafka:
    bootstrap-servers: localhost:9092
    admin:
      auto-create: true
  spring:
    flyway:
      enabled: true

# gRPC client config goes here. Create a new section under grpc.client
# for every client integration.
grpc:
  client:
    inventoryClient:
      address: static://localhost:9090
      negotiation-type: PLAINTEXT
      default-load-balancing-policy: "round_robin"
      enable-keep-alive: true
      keep-alive-time: PT50S
      keep-alive-timeout: PT5S
      keep-alive-without-calls: true

# All application-specific local override properties go here
exchange:
  order:
    my-prop-value: catdog
### Example configuration showing how you might resolve an env variable generated by generate_local_secrets script
bet.pricing.api.oauth:
  clientId: ${ENV_BET_PRICING_API_ODDSFACTORY_OAUTH_CLIENT_ID}
  
pekko:
  config: classpath:application-local.conf

quickfixj:
  # if "mock" spring envrironment not enabled, this is used (standard, and prod like)
  config:
    file:
      classpath:quickfixj-dev.cfg

  # if "mock" spring environment is turned on in addition to local like local,mock
  # use this mock config file to connect to mock-server
  # this way dev can run against Kalshi, or against a Mock; depending on this spring env 'mock' being set
  mock:
    config:
      file:
        classpath:quickfixj-mock.cfg
