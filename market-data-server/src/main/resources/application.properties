server.port=8084

# Mock Kalshi Server Configuration
mock.kalshi.rest.url=http://localhost:9090
mock.kalshi.websocket.url=ws://localhost:9090/trade-api/ws/v2

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.compression-type=snappy
spring.kafka.producer.linger-ms=10
spring.kafka.producer.batch-size=32768

# Kafka Topics
kafka.topic.market-data=market-data-all
kafka.topic.error-alert=FIX_ERROR_ALERT-LOCAL

# WebSocket Connection Configuration
websocket.connection.retry.maxAttempts=10
websocket.connection.retry.delayMs=5000

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=5000ms
spring.data.redis.lettuce.pool.max-active=10
spring.data.redis.lettuce.pool.max-idle=10
spring.data.redis.lettuce.pool.min-idle=5

# Bootstrap Configuration
bootstrap.enabled=true
bootstrap.lookback.minutes=120

# Logging
logging.level.com.kalshi.marketdata=DEBUG
logging.level.org.springframework.web.socket=DEBUG

# Actuator endpoints
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true